<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>finalmitocode</groupId>
  <artifactId>finalmitocode</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>finalmitocode Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

		<!-- Third-party libraries -->
		<spring-data-jdbc.version>1.2.1.RELEASE</spring-data-jdbc.version>
		<springdoc-openapi-ui.version>2.0.2</springdoc-openapi-ui.version>
		<jackson-databind-nullable.version>0.2.1</jackson-databind-nullable.version>
		<mapstruct.version>1.4.1.Final</mapstruct.version>
		<jaxb-api.version>2.3.0</jaxb-api.version>

		<!-- Maven plugins -->
		<jacoco.version>0.8.11</jacoco.version>
		<openapi-generator-maven-plugin.version>6.3.0</openapi-generator-maven-plugin.version>
		<build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>

		<!-- Docker -->
		<docker.jib-maven-plugin.version>3.4.0</docker.jib-maven-plugin.version>
		<docker.image.prefix>springcommunity</docker.image.prefix>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
	</properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties
							file is present -->
						<goals>
							<goal>build-info</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<encoding.source>${project.build.sourceEncoding}</encoding.source>
								<encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
								<java.release>${maven.compiler.release}</java.release>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<excludes>
						<!-- Generated code -->
						<exclude>**/org/springframework/samples/petclinic/rest/dto/**</exclude>
						<exclude>**/org/springframework/samples/petclinic/rest/api/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.85</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.66</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${docker.jib-maven-plugin.version}</version>
				<configuration>
					<to>
						<image>docker.io/${docker.image.prefix}/${project.artifactId}</image>
						<tags>
							<tag>${project.version}</tag>
							<tag>latest</tag>
						</tags>
					</to>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<!-- RELEASE_VERSION -->
				<version>${openapi-generator-maven-plugin.version}</version>
				<!-- /RELEASE_VERSION -->
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/openapi.yml</inputSpec>
							<generatorName>spring</generatorName>
							<library>spring-boot</library>

							<!-- Only enabling model andopenapi-generator-maven-plugin API generation -->
							<modelNameSuffix>Dto</modelNameSuffix>
							<apiPackage>org.springframework.samples.petclinic.rest.api</apiPackage>
							<generateModels>true</generateModels>
							<modelPackage>org.springframework.samples.petclinic.rest.dto</modelPackage>
							<!-- <generateSupportingFiles>true</generateSupportingFiles> <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate> -->
							<generateApis>true</generateApis>
							<configOptions>
								<!-- RestController implementation is provided by Petclinic developers -->
								<interfaceOnly>true</interfaceOnly>
								<!-- Activating Java 8 features -->
								<performBeanValidation>true</performBeanValidation>
								<dateLibrary>java8</dateLibrary>
								<useSpringBoot3>true</useSpringBoot3>
								<openApiNullable>false</openApiNullable>
								<!-- override the default library to jersey2 -->
								<serializationLibrary>jackson</serializationLibrary>
								<!-- switch documentation provider to springdoc -->
								<documentationProvider>springdoc</documentationProvider>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
							-Amapstruct.suppressGeneratorTimestamp=true
						</compilerArg>
						<compilerArg>
							-Amapstruct.suppressGeneratorVersionInfoComment=true
						</compilerArg>
						<compilerArg>
							-Amapstruct.defaultComponentModel=spring
						</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
